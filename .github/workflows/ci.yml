name: Build and Deploy

on:
  - push
  - pull_request

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      POETRY_NO_INTERACTION: 1
      POETRY_VIRTUALENVS_IN_PROJECT: 1
      POETRY_VIRTUALENVS_CREATE: 1
      POETRY_CACHE_DIR: /tmp/poetry_cache
    steps:
      - uses: actions/checkout@v4
      - name: Install protobuf-compiler
        run: sudo apt-get install -y protobuf-compiler
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: 1.3.0
      - uses: actions/cache@v3
        name: Cache Python dependancies
        id: cached-poetry-dependencies
        with:
          path: robotica-backend/python/.venv
          key: venv-${{ hashFiles('robotica-backend/python/poetry.lock') }}
      - name: Install the python dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry -C robotica-backend/python install --without dev --no-root
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2
      - name: Fmt Check
        run: cargo fmt -- --check
      - name: Clippy
        run: cargo clippy --no-deps -- -Dwarnings
      - name: Compile
        run: cargo build
      - name: Test common lib
        run: cargo test -p robotica-common --features chrono
      - name: Test backend lib
        run: |
          export PATH="$PWD/robotica-backend/python/.venv/bin:$PATH"
          cargo test -p robotica-backend
      - name: Test frontend lib
        run: cargo test -p robotica-frontend
      - name: Test backend lib (Brian)
        run: cargo test -p brian-backend --features scheduler

  push:
    name: Push
    uses: brianmay/workflows/.github/workflows/docker.yaml@main
    secrets:
      DEPLOY_SECRET: ${{ secrets.DEPLOY_SECRET }}
    needs:
      - test
    with:
      deploy_iot: true
